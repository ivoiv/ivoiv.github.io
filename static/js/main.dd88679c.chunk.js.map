{"version":3,"sources":["Game/Common/Item.tsx","Game/store/reducer.tsx","Game/GameArea/index.tsx","Game/Scoreboard/index.tsx","Game/App.tsx","serviceWorker.js","index.tsx"],"names":["withStyles","root","width","height","display","justifyContent","alignItems","border","boxShadow","transition","pressed","transform","large","props","_classNames","classes","children","className","onClick","pressable","rest","Object","objectWithoutProperties","buttonEl","useRef","_useState","useState","_useState2","slicedToArray","setPressed","useEffect","current","addEventListener","onMousePress","onSpacePress","document","onRelease","removeEventListener","e","code","repeat","console","log","react_default","a","createElement","assign","classNames","defineProperty","ref","InitialState","items","collected_items","MapDispatchToProps","collectItem","item","type","connect","state","theme","flexDirection","playArea","flex","overflowY","heading","composes","margin","map","index","Common_Item","key","calcualteItemScore","allItems","collectedItemType","collectedItemAmmount","find","standardScore","points","bonus","Math","floor","ammount","reward","mapDispatchToProps","newGame","table","textAlign","& th","& tbody","tableContainer","bonuses","padding","& p:first-of-type","marginRight","total","& button","collectedItems","entries","i","style","reduce","accumulator","currentItem","itemWithBonus","undefined","calculateTotalScore","addItemsAndRules","itemsAndRules","@global",".heading","boxSizing","lineHeight","paddingLeft","body","fontFamily","leftScreen","rightScreen","Game_GameArea","Game_Scoreboard","Boolean","window","location","hostname","match","jsspreset","require","jss","use","store","createStore","arguments","length","action","objectSpread","sortedItems","keys","sort","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","react_jss_esm","Game_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd88679c.chunk.js","sourcesContent":["import React, {\n  ReactHTMLElement,\n  AllHTMLAttributes,\n  HTMLProps,\n  useState,\n  useEffect,\n  useRef,\n  ReactNode,\n  HTMLAttributes\n} from \"react\";\nimport withStyles from \"react-jss\";\nimport { JSXElement, JSXAttribute } from \"@babel/types\";\nimport classNames from \"classnames\";\n\nexport type ItemType = string;\n\nconst styles = {\n  root: {\n    width: 48,\n    height: 48,\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border: \"2px solid black\",\n    boxShadow: \"10px 10px 10px 0px #a3a3a3ff\",\n    transition: \"transform 200ms, box-shadow 200ms\"\n  },\n  pressed: {\n    transform: \"scale(0.9,0.9)\",\n    boxShadow: \"6px 6px 5px -1px #a3a3a3ff\"\n  },\n  large: {\n    width: 96,\n    height: 96\n  }\n};\n\ninterface Props\n  extends React.PropsWithChildren<HTMLAttributes<HTMLButtonElement>> {\n  classes: Record<string, string>;\n  large?: boolean;\n  onClick?: () => any;\n  pressable?: boolean;\n}\n\nfunction Item(props: Props) {\n  const {\n    classes,\n    children,\n    className,\n    onClick,\n    large,\n    pressable,\n    ...rest\n  } = props;\n\n  const buttonEl = useRef<HTMLButtonElement>(null);\n  const [pressed, setPressed] = useState(false);\n  useEffect(() => {\n    buttonEl.current &&\n      onClick &&\n      buttonEl.current.addEventListener(\"mousedown\", onMousePress);\n    buttonEl.current &&\n      onClick &&\n      buttonEl.current.addEventListener(\"keydown\", onSpacePress);\n    // buttonEl.current &&\n    //   buttonEl.current.addEventListener(\"mouseup\", () => setPressed(false));\n  }, []);\n\n  const onMousePress = () => {\n    setPressed(true);\n    document.addEventListener(\"mouseup\", function onRelease() {\n      setPressed(false);\n      onClick && onClick();\n      document.removeEventListener(\"mouseup\", onRelease);\n    });\n  };\n\n  const onSpacePress = (e: KeyboardEvent) => {\n    if (e.code === \"Space\" && !pressed && !e.repeat) {\n      setPressed(true);\n      document.addEventListener(\"keyup\", function onRelease(e: KeyboardEvent) {\n        if (e.code === \"Space\") {\n          setPressed(false);\n          onClick && onClick();\n          document.removeEventListener(\"keyup\", onRelease);\n        }\n      });\n    }\n  };\n\n  console.log(\"rerender\", pressed);\n  return (\n    <button\n      className={classNames(classes.root, className, {\n        [classes.pressed]: pressable && pressed,\n        [classes.large]: large\n      })}\n      ref={buttonEl}\n      {...rest}>\n      {children}\n    </button>\n  );\n}\n\nexport default withStyles(styles)(Item);\n","import React from \"react\";\nimport Entities from \"types/entities\";\n\nconst COLLECT_ITEM = \"COLLECT_ITEM\";\nconst ADD_ITEMS_AND_RULES = \"ADD_ITEMS_AND_RULES\";\nconst NEW_GAME = \"NEW_GAME\";\n\ntype CollectItemAction = {\n  type: typeof COLLECT_ITEM;\n  item: Entities.Item;\n};\n\ntype AddItemsAndRulesAction = {\n  type: typeof ADD_ITEMS_AND_RULES;\n  itemsAndRules: Entities.ItemList;\n};\n\ntype NewGameAction = {\n  type: typeof NEW_GAME;\n};\n\ntype ActionTypes = CollectItemAction | AddItemsAndRulesAction | NewGameAction;\n\nexport const collectItem = (item: Entities.Item): CollectItemAction => ({\n  type: COLLECT_ITEM,\n  item: item\n});\n\nexport const addItemsAndRules = (\n  itemsAndRules: Entities.ItemList\n): AddItemsAndRulesAction => ({\n  type: ADD_ITEMS_AND_RULES,\n  itemsAndRules: itemsAndRules\n});\n\nexport const newGame = (): NewGameAction => ({\n  type: NEW_GAME\n});\n\nconst InitialState: Entities.GameState = {\n  items: [],\n  collected_items: {}\n};\nexport default (state = InitialState, action: ActionTypes): any => {\n  //console.log(action);\n  switch (action.type) {\n    case ADD_ITEMS_AND_RULES: {\n      return {\n        ...state,\n        items: action.itemsAndRules\n      };\n    }\n    case COLLECT_ITEM:\n      const items: Entities.ItemCollection = { ...state.collected_items };\n      items[action.item.type] = (items[action.item.type] || 0) + 1;\n\n      /* Sorting collected items alphabetically for fun */\n      const sortedItems: Entities.ItemCollection = {};\n      Object.keys(items)\n        .sort()\n        .map(function(key: any) {\n          sortedItems[key] = items[key];\n        });\n\n      return {\n        ...state,\n        collected_items: sortedItems\n      };\n    case NEW_GAME:\n      return {\n        ...state,\n        collected_items: {}\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useEffect, useRef, useCallback } from \"react\";\nimport withStyles from \"react-jss\";\nimport Item, { ItemType } from \"../Common/Item\";\nimport { connect } from \"react-redux\";\nimport { collectItem } from \"../store/reducer\";\nimport Entities from \"types/entities\";\n\nconst styles = (theme: any) => ({\n  root: {\n    height: \"100%\",\n    //backgroundColor: \"green\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  playArea: {\n    //backgroundColor: \"blue\",\n    flex:'1 1 auto',\n    //height: \"100%\",\n    border:'2px solid black',\n    overflowY:'scroll'\n\n  },\n  heading: {\n    composes: \"heading\",\n    flex:'0 1 auto'\n  },\n  item: {\n    margin: 24\n  }\n});\n\ninterface Props {\n  classes: Record<string, string>;\n  items: Entities.ItemList;\n  collectItem: (item: Entities.Item) => void;\n}\n\nfunction GameArea(props: Props) {\n  return (\n    <div className={props.classes.root}>\n      <h1 className={props.classes.heading}>Kahoot! Points</h1>\n      <div className={props.classes.playArea}>\n        {props.items.map((item, index) => {\n          return (\n            <Item\n              key={index}\n              large\n              pressable\n              className={props.classes.item}\n              onClick={() => props.collectItem(item)}>\n              {item.type}\n            </Item>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nconst MapDispatchToProps = {\n  collectItem\n};\n\nconst MapStateToProps = (state: any) => ({\n  items: state.items\n});\n\nexport default connect(\n  MapStateToProps,\n  MapDispatchToProps\n)(withStyles(styles)(GameArea));\n","import React from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport { connect, MapStateToProps } from \"react-redux\";\nimport Item from \"../Common/Item\";\nimport Entities from \"types/entities\";\nimport { newGame } from \"Game/store/reducer\";\n\nconst styles = (theme: any) => ({\n  root: {\n    height: \"100%\",\n    //backgroundColor: \"green\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  playArea: {\n    //backgroundColor: \"purple\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    //height: \"100%\",\n    flex: \"1 1 auto\"\n  },\n  heading: {\n    composes: \"heading\",\n    flex: \"0 1 auto\"\n  },\n  table: {\n    width: \"100%\",\n    textAlign: \"center\",\n    //tableLayout:'fixed'\n    \"& th\": {\n      width: \"33%\"\n    },\n    \"& tbody\": {\n      overflowY: \"scroll\"\n    }\n  },\n  tableContainer: {\n    flex: \"1 1 auto\",\n    border: \"2px solid black\",\n    overflowY:'scroll'\n  },\n\n  bonuses: {\n    border: \"2px solid black\",\n    padding: \"0 24px\",\n    display: \"flex\",\n    \"& p:first-of-type\": {\n      marginRight: 8\n    }\n  },\n  total: {\n    border: \"2px solid black\",\n\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: \"0 24px\",\n    \"& button\": {\n      padding: \"16px 36px\"\n    }\n  }\n});\n\nfunction calcualteItemScore(\n  allItems: Entities.ItemList,\n  collectedItemType: keyof Entities.ItemCollection,\n  collectedItemAmmount: Entities.ItemCollection[keyof Entities.ItemCollection]\n): number {\n  const item = allItems.find(item => item.type === collectedItemType);\n\n  if (item) {\n    const standardScore = collectedItemAmmount * item.points;\n    if (item.bonus) {\n      const bonusScore =\n        Math.floor(collectedItemAmmount / item.bonus.ammount) *\n        item.bonus.reward;\n      return (\n        bonusScore + (collectedItemAmmount % item.bonus.ammount) * item.points\n      );\n    }\n    return standardScore;\n  } else {\n    return 0;\n  }\n}\n\nfunction calculateTotalBonuses(\n  allItems: Entities.ItemList,\n  collectedItems: Entities.ItemCollection\n): number {\n  const collectedItemsIterable: Array<\n    [\n      keyof Entities.ItemCollection,\n      Entities.ItemCollection[keyof Entities.ItemCollection]\n    ]\n  > = Object.entries(collectedItems);\n  return collectedItemsIterable.reduce((accumulator, currentItem) => {\n    const itemWithBonus: Entities.Item | undefined = allItems.find(\n      item => item.type === currentItem[0] && item.bonus !== undefined\n    );\n    if (itemWithBonus && itemWithBonus.bonus) {\n      return (\n        accumulator +\n        Math.floor(currentItem[1] / itemWithBonus.bonus.ammount) *\n          itemWithBonus.bonus.reward\n      );\n    } else {\n      return accumulator;\n    }\n  }, 0);\n}\n\nfunction calculateTotalScore(\n  allItems: Entities.ItemList,\n  collectedItems: Entities.ItemCollection\n): number {\n  const collectedItemsIterable: Array<\n    [\n      keyof Entities.ItemCollection,\n      Entities.ItemCollection[keyof Entities.ItemCollection]\n    ]\n  > = Object.entries(collectedItems);\n\n  return collectedItemsIterable.reduce(\n    (accumulator, currentItem) =>\n      accumulator +\n      calcualteItemScore(allItems, currentItem[0], currentItem[1]),\n    0\n  );\n}\n\ninterface PropsFromState {\n  collected_items: Entities.ItemCollection;\n  items: Entities.ItemList;\n}\n\ninterface PropsFromDispatch {\n  newGame: () => void;\n}\n\ninterface Props\n  extends WithStyles<typeof styles>,\n    PropsFromState,\n    PropsFromDispatch {}\n\nfunction Scoreboard(props: Props) {\n  const collected_items = Object.entries(props.collected_items);\n  //console.log(props);\n  return (\n    <div className={props.classes.root}>\n      <h1 className={props.classes.heading}>Player items</h1>\n      <div className={props.classes.playArea}>\n        <div className={props.classes.tableContainer}>\n          <table className={props.classes.table}>\n            <thead>\n              <tr>\n                <th>Item</th>\n                <th>Qty</th>\n                <th>Score</th>\n              </tr>\n            </thead>\n            <tbody>\n              {collected_items.map((item: any, i: number) => (\n                <tr key={i}>\n                  <td>\n                    <Item>{item[0]}</Item>\n                  </td>\n                  <td>{item[1]}</td>\n                  <td>{calcualteItemScore(props.items, item[0], item[1])}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        <div style={{ flex: \"0 1 auto\" }}>\n          <div className={props.classes.bonuses}>\n            <p>Bonuses</p>\n            <p>{calculateTotalBonuses(props.items, props.collected_items)}</p>\n          </div>\n          <div className={props.classes.total}>\n            <div>\n              <p>Total</p>\n              <p>{calculateTotalScore(props.items, props.collected_items)}</p>\n            </div>\n            <button onClick={() => props.newGame()}>NEW GAME</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  collected_items: state.collected_items,\n  items: state.items\n});\n\nconst mapDispatchToProps = {\n  newGame\n};\n\nexport default connect<PropsFromState, PropsFromDispatch>(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Scoreboard));\n","import React, { useState, useEffect } from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport GameArea from \"./GameArea\";\nimport Scoreboard from \"./Scoreboard\";\nimport Entities from \"../types/entities\";\nimport { addItemsAndRules } from \"./store/reducer\";\nimport { connect } from \"react-redux\";\n\nconst styles = (theme: any) => ({\n  \"@global\": {\n    \".heading\": {\n      border: \"2px solid black\",\n      boxSizing: \"border-box\",\n      margin: 0,\n      lineHeight: \"2em\",\n      height:'2em',\n      paddingLeft:24\n    },\n    'body':{\n      fontFamily:'Roboto, sans-serif'\n    }\n  },\n  root: {\n    width: 1024,\n    height: 768,\n    border: \"2px solid black\",\n    display: \"flex\"\n  },\n  leftScreen: {\n    width: \"66%\",\n    height: \"100%\"\n  },\n  rightScreen: {\n    width: \"34%\",\n    height: \"100%\"\n    //backgroundColor: \"blue\"\n  }\n});\n\nconst items: Entities.ItemList = [\n  {\n    type: \"A\",\n    points: 50,\n    bonus: {\n      ammount: 3,\n      reward: 200\n    }\n  },\n  {\n    type: \"B\",\n    points: 30,\n    bonus: {\n      ammount: 2,\n      reward: 90\n    }\n  },\n  {\n    type: \"C\",\n    points: 20\n  },\n  {\n    type: \"D\",\n    points: 15\n  }\n];\n\n\n\ninterface Props extends WithStyles<typeof styles> {\n  addItemsAndRules: typeof addItemsAndRules;\n}\n\nfunction App(props: Props) {\n  useEffect(() => {\n    props.addItemsAndRules(items);\n  }, []);\n\n  return (\n    <div className={props.classes.root}>\n      <div className={props.classes.leftScreen}>\n        <GameArea />\n      </div>\n      <div className={props.classes.rightScreen}>\n        <Scoreboard />\n      </div>\n    </div>\n  );\n}\n\nconst MapDispatchToProps = {\n  addItemsAndRules\n};\n\nexport default connect(\n  null,\n  MapDispatchToProps\n)(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Game/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport jss from \"jss\";\nimport { ThemeProvider } from \"react-jss\";\nimport \"react-app-polyfill/ie11\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Game/store/reducer\";\n\nconst jsspreset = require(\"jss-preset-default\");\n\njss.use(jsspreset);\n\n//@ts-ignore\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={{}}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}