{"version":3,"sources":["Game/Common/Item.tsx","Game/store/index.tsx","Game/GameArea/index.tsx","Game/Scoreboard/index.tsx","Game/App.tsx","serviceWorker.js","index.tsx"],"names":["React","memo","withStyles","root","width","height","display","justifyContent","alignItems","border","transition","pressable","boxShadow","&:hover","backgroundColor","pressed","transform","large","props","_classNames","classes","children","className","onClick","rest","Object","objectWithoutProperties","buttonEl","useRef","_useState","useState","_useState2","slicedToArray","setPressed","useEffect","current","addEventListener","document","onRelease","removeEventListener","e","code","repeat","react_default","a","createElement","assign","classNames","defineProperty","ref","initialState","items","collected_items","MapDispatchToProps","collectItem","item","type","connect","state","flexDirection","playArea","flex","overflowY","heading","composes","margin","map","index","Common_Item","key","calcualteItemScore","allItems","collectedItemType","collectedItemAmmount","find","standardScore","points","bonus","Math","floor","ammount","reward","mapDispatchToProps","newGame","entries","table","paddingTop","textAlign","borderCollapse","& th","padding","borderBottom","& td","& tbody","tableContainer","bonuses","& p:first-of-type","marginRight","total","& button","maxWidth","maxHeight","length","i","colSpan","style","reduce","accumulator","currentItem","itemWithBonus","undefined","paddingRight","collectedItems","calculateTotalScore","addItemsAndRules","itemsAndRules","@global",".heading","textOverflow","whiteSpace","overflow","boxSizing","lineHeight","paddingLeft","body","fontFamily","leftScreen","rightScreen","role","Game_GameArea","Game_Scoreboard","Boolean","window","location","hostname","match","jsspreset","require","jss","use","store","createStore","arguments","action","objectSpread","sortedItems","keys","sort","forEach","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","react_jss_esm","theme","Game_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ab81058.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, HTMLAttributes } from \"react\";\r\nimport withStyles, { WithStyles } from \"react-jss\";\r\nimport classNames from \"classnames\";\r\n\r\nexport type ItemType = string;\r\n\r\nconst styles = {\r\n  root: {\r\n    width: 48,\r\n    height: 48,\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    border: \"2px solid black\",\r\n    transition: \"transform 200ms, box-shadow 200ms, background-color 200ms\"\r\n  },\r\n  pressable: {\r\n    boxShadow: \"10px 10px 10px 0px #a3a3a3ff\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#b8b8b8\"\r\n    }\r\n  },\r\n  pressed: {\r\n    transform: \"scale(0.9,0.9)\",\r\n    boxShadow: \"6px 6px 5px -1px #a3a3a3ff\"\r\n  },\r\n  large: {\r\n    width: 96,\r\n    height: 96\r\n  }\r\n};\r\n\r\ninterface Props\r\n  extends React.PropsWithChildren<HTMLAttributes<HTMLButtonElement>>,\r\n    WithStyles<typeof styles> {\r\n  large?: boolean;\r\n  onClick?: () => any;\r\n  pressable?: boolean;\r\n}\r\n\r\nfunction Item(props: Props) {\r\n  const {\r\n    classes,\r\n    children,\r\n    className,\r\n    onClick,\r\n    large,\r\n    pressable,\r\n    ...rest\r\n  } = props;\r\n\r\n  const buttonEl = useRef<HTMLButtonElement>(null);\r\n  const [pressed, setPressed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onMousePress = () => {\r\n      setPressed(true);\r\n      document.addEventListener(\"mouseup\", function onRelease() {\r\n        onClick && onClick();\r\n        document.removeEventListener(\"mouseup\", onRelease);\r\n        setPressed(false);\r\n      });\r\n    };\r\n\r\n    const onSpacePress = (e: KeyboardEvent) => {\r\n      if (e.code === \"Space\" && !pressed && !e.repeat) {\r\n        setPressed(true);\r\n        document.addEventListener(\"keyup\", function onRelease(\r\n          e: KeyboardEvent\r\n        ) {\r\n          if (e.code === \"Space\") {\r\n            onClick && onClick();\r\n            document.removeEventListener(\"keyup\", onRelease);\r\n            setPressed(false);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    buttonEl.current &&\r\n      onClick &&\r\n      buttonEl.current.addEventListener(\"mousedown\", onMousePress);\r\n    buttonEl.current &&\r\n      onClick &&\r\n      buttonEl.current.addEventListener(\"keydown\", onSpacePress);\r\n  }, []);\r\n\r\n  return (\r\n    <button\r\n      className={classNames(classes.root, className, {\r\n        [classes.pressable]: pressable,\r\n        [classes.pressed]: pressable && pressed,\r\n        [classes.large]: large\r\n      })}\r\n      ref={buttonEl}\r\n      {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default React.memo(withStyles(styles)(Item));\r\n","import Entities from \"types/entities\";\r\n\r\n/* Item Collection */\r\n\r\nconst COLLECT_ITEM = \"COLLECT_ITEM\";\r\n\r\ntype CollectItemAction = {\r\n  type: typeof COLLECT_ITEM;\r\n  item: Entities.Item;\r\n};\r\n\r\nexport const collectItem = (item: Entities.Item): CollectItemAction => ({\r\n  type: COLLECT_ITEM,\r\n  item: item\r\n});\r\n\r\n/* Item initialization */\r\n\r\nconst ADD_ITEMS_AND_RULES = \"ADD_ITEMS_AND_RULES\";\r\n\r\ntype AddItemsAndRulesAction = {\r\n  type: typeof ADD_ITEMS_AND_RULES;\r\n  itemsAndRules: Entities.ItemList;\r\n};\r\n\r\nexport const addItemsAndRules = (\r\n  itemsAndRules: Entities.ItemList\r\n): AddItemsAndRulesAction => ({\r\n  type: ADD_ITEMS_AND_RULES,\r\n  itemsAndRules: itemsAndRules\r\n});\r\n\r\n/* New Game / Game Reset */\r\n\r\nconst NEW_GAME = \"NEW_GAME\";\r\n\r\ntype NewGameAction = {\r\n  type: typeof NEW_GAME;\r\n};\r\n\r\nexport const newGame = (): NewGameAction => ({\r\n  type: NEW_GAME\r\n});\r\n\r\n/* State Reducer */\r\n\r\ntype ActionTypes = CollectItemAction | AddItemsAndRulesAction | NewGameAction;\r\n\r\nexport const initialState: Entities.GameState = {\r\n  items: [],\r\n  collected_items: {}\r\n};\r\nexport default (\r\n  state:Entities.GameState = initialState,\r\n  action: ActionTypes\r\n): Entities.GameState => {\r\n  switch (action.type) {\r\n    case ADD_ITEMS_AND_RULES: {\r\n      return {\r\n        ...state,\r\n        items: action.itemsAndRules\r\n      };\r\n    }\r\n    case COLLECT_ITEM:\r\n      const items: Entities.ItemCollection = { ...state.collected_items };\r\n      items[action.item.type] = (items[action.item.type] || 0) + 1;\r\n\r\n      /* Sorting collected items alphabetically for fun */\r\n      const sortedItems: Entities.ItemCollection = {};\r\n      Object.keys(items)\r\n        .sort()\r\n        .forEach(function(key) {\r\n          sortedItems[key] = items[key];\r\n        });\r\n\r\n      return {\r\n        ...state,\r\n        collected_items: sortedItems\r\n      };\r\n    case NEW_GAME:\r\n      return {\r\n        ...state,\r\n        collected_items: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport withStyles, { WithStyles } from \"react-jss\";\r\nimport Item from \"../Common/Item\";\r\nimport { connect } from \"react-redux\";\r\nimport { collectItem } from \"../store\";\r\nimport Entities from \"types/entities\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  playArea: {\r\n    flex: \"1 1 auto\",\r\n    border: \"2px solid black\",\r\n    overflowY: \"scroll\"\r\n  },\r\n  heading: {\r\n    composes: \"heading\",\r\n    flex: \"0 1 auto\"\r\n  },\r\n  item: {\r\n    margin: 24\r\n  }\r\n};\r\n\r\ntype PropsFromState = {\r\n  items: Entities.ItemList;\r\n};\r\n\r\ntype PropsFromDispatch = {\r\n  collectItem: (item: Entities.Item) => void;\r\n};\r\n\r\ninterface Props\r\n  extends PropsFromState,\r\n    PropsFromDispatch,\r\n    WithStyles<typeof styles> {}\r\n\r\nfunction GameArea(props: Props) {\r\n  return (\r\n    <div className={props.classes.root}>\r\n      <h1 className={props.classes.heading}>Kahoot! Points</h1>\r\n      <div className={props.classes.playArea}>\r\n        {props.items.map((item, index) => {\r\n          return (\r\n            <Item\r\n              key={index}\r\n              large\r\n              pressable\r\n              className={props.classes.item}\r\n              onClick={() => props.collectItem(item)}>\r\n              {item.type}\r\n            </Item>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MapStateToProps = (state: any): PropsFromState => ({\r\n  items: state.items\r\n});\r\n\r\nconst MapDispatchToProps: PropsFromDispatch = {\r\n  collectItem\r\n};\r\n\r\nexport default connect<PropsFromState, PropsFromDispatch>(\r\n  MapStateToProps,\r\n  MapDispatchToProps\r\n)(React.memo(withStyles(styles)(GameArea)));\r\n","import React from \"react\";\r\nimport withStyles, { WithStyles } from \"react-jss\";\r\nimport { connect } from \"react-redux\";\r\nimport Item from \"../Common/Item\";\r\nimport Entities from \"types/entities\";\r\nimport { newGame } from \"Game/store\";\r\n\r\nconst styles = {\r\n  root: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  playArea: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    flex: \"1 1 auto\"\r\n  },\r\n  heading: {\r\n    composes: \"heading\",\r\n    flex: \"0 1 auto\"\r\n  },\r\n  table: {\r\n    paddingTop: 16,\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    borderCollapse: \"collapse\",\r\n\r\n    \"& th\": {\r\n      padding: 8,\r\n      width: \"33%\",\r\n      borderBottom: \"2px solid black\"\r\n    },\r\n    \"& td\": {\r\n      borderBottom: \"2px solid black\",\r\n      padding: 8\r\n    },\r\n    \"& tbody\": {\r\n      overflowY: \"scroll\"\r\n    }\r\n  },\r\n  tableContainer: {\r\n    flex: \"1 1 auto\",\r\n    border: \"2px solid black\",\r\n    overflowY: \"scroll\"\r\n  },\r\n\r\n  bonuses: {\r\n    border: \"2px solid black\",\r\n    padding: \"0 24px\",\r\n    display: \"flex\",\r\n    \"& p:first-of-type\": {\r\n      marginRight: 8\r\n    }\r\n  },\r\n  total: {\r\n    border: \"2px solid black\",\r\n\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    padding: \"0 24px\",\r\n    \"& button\": {\r\n      maxWidth: 150,\r\n      maxHeight: 50,\r\n      height: \"100vh\",\r\n      width: \"100vw\"\r\n    }\r\n  }\r\n};\r\n\r\n/* For best efficiency and performance the three following\r\n * calculations should be done in a single iteration.\r\n *\r\n * Howoever since the calculation have insignificant performance\r\n * impact I have rather chosen to isolate and modularise them.\r\n */\r\n\r\nfunction calcualteItemScore(\r\n  allItems: Entities.ItemList,\r\n  collectedItemType: keyof Entities.ItemCollection,\r\n  collectedItemAmmount: Entities.ItemCollection[keyof Entities.ItemCollection]\r\n): number {\r\n  const item = allItems.find(item => item.type === collectedItemType);\r\n\r\n  if (item) {\r\n    const standardScore = collectedItemAmmount * item.points;\r\n    if (item.bonus) {\r\n      const bonusScore =\r\n        Math.floor(collectedItemAmmount / item.bonus.ammount) *\r\n        item.bonus.reward;\r\n      return (\r\n        bonusScore + (collectedItemAmmount % item.bonus.ammount) * item.points\r\n      );\r\n    }\r\n    return standardScore;\r\n  } else {\r\n    return 0;\r\n  }\r\n}\r\n\r\nfunction calculateTotalBonuses(\r\n  allItems: Entities.ItemList,\r\n  collectedItems: Entities.IterableItemCollection\r\n): number {\r\n  return collectedItems.reduce((accumulator, currentItem) => {\r\n    const itemWithBonus: Entities.Item | undefined = allItems.find(\r\n      item => item.type === currentItem[0] && item.bonus !== undefined\r\n    );\r\n    if (itemWithBonus && itemWithBonus.bonus) {\r\n      return (\r\n        accumulator +\r\n        Math.floor(currentItem[1] / itemWithBonus.bonus.ammount) *\r\n          itemWithBonus.bonus.reward\r\n      );\r\n    } else {\r\n      return accumulator;\r\n    }\r\n  }, 0);\r\n}\r\n\r\nfunction calculateTotalScore(\r\n  allItems: Entities.ItemList,\r\n  collectedItems: Entities.IterableItemCollection\r\n): number {\r\n  return collectedItems.reduce(\r\n    (accumulator, currentItem) =>\r\n      accumulator +\r\n      calcualteItemScore(allItems, currentItem[0], currentItem[1]),\r\n    0\r\n  );\r\n}\r\n\r\ninterface PropsFromState {\r\n  collected_items: Entities.IterableItemCollection;\r\n  items: Entities.ItemList;\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  newGame: () => void;\r\n}\r\n\r\ninterface Props\r\n  extends WithStyles<typeof styles>,\r\n    PropsFromState,\r\n    PropsFromDispatch {}\r\n\r\nfunction Scoreboard(props: Props) {\r\n  //console.log(props);\r\n  return (\r\n    <div className={props.classes.root}>\r\n      <h1 className={props.classes.heading}>Player items</h1>\r\n      <div className={props.classes.playArea}>\r\n        <div className={props.classes.tableContainer}>\r\n          <table className={props.classes.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>Item</th>\r\n                <th>Qty</th>\r\n                <th>Score</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {props.collected_items.length ? (\r\n                props.collected_items.map((item: any, i: number) => (\r\n                  <tr key={i}>\r\n                    <td>\r\n                      <Item>{item[0]}</Item>\r\n                    </td>\r\n                    <td>{item[1]}</td>\r\n                    <td>{calcualteItemScore(props.items, item[0], item[1])}</td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan={3}>\r\n                    <p>You have not collected any items yet.</p>\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div style={{ flex: \"0 1 auto\" }}>\r\n          <div className={props.classes.bonuses}>\r\n            <p>Bonuses</p>\r\n            <p>{calculateTotalBonuses(props.items, props.collected_items)}</p>\r\n          </div>\r\n          <div className={props.classes.total}>\r\n            <div style={{ paddingRight: 24 }}>\r\n              <p>Total</p>\r\n              <p>{calculateTotalScore(props.items, props.collected_items)}</p>\r\n            </div>\r\n            <button onClick={() => props.newGame()}>NEW GAME</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: any): PropsFromState => ({\r\n  collected_items: Object.entries(state.collected_items),\r\n  items: state.items\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  newGame\r\n};\r\n\r\nexport default connect<PropsFromState, PropsFromDispatch>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(withStyles(styles)(Scoreboard)));\r\n","import React, { useEffect } from \"react\";\nimport withStyles, { WithStyles } from \"react-jss\";\nimport GameArea from \"./GameArea\";\nimport Scoreboard from \"./Scoreboard\";\nimport Entities from \"../types/entities\";\nimport { addItemsAndRules } from \"./store\";\nimport { connect } from \"react-redux\";\n\nconst styles = {\n  \"@global\": {\n    \".heading\": {\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      border: \"2px solid black\",\n      boxSizing: \"border-box\",\n      margin: 0,\n      lineHeight: \"2em\",\n      height: \"2em\",\n      paddingLeft: 24\n    },\n    body: {\n      fontFamily: \"Roboto, sans-serif\",\n      margin: 0\n    }\n  },\n  root: {\n    maxWidth: 1024,\n    maxHeight: 768,\n    margin: \"auto\",\n    width: \"100vw\",\n    height: \"100vh\",\n    border: \"2px solid black\",\n    display: \"flex\"\n  },\n  leftScreen: {\n    width: \"66%\",\n    height: \"100%\"\n  },\n  rightScreen: {\n    width: \"34%\",\n    height: \"100%\"\n  }\n};\n\nconst items: Entities.ItemList = [\n  {\n    type: \"A\",\n    points: 50,\n    bonus: {\n      ammount: 3,\n      reward: 200\n    }\n  },\n  {\n    type: \"B\",\n    points: 30,\n    bonus: {\n      ammount: 2,\n      reward: 90\n    }\n  },\n  {\n    type: \"C\",\n    points: 20\n  },\n  {\n    type: \"D\",\n    points: 15\n  }\n];\n\ninterface PropsFromDispatch {\n  addItemsAndRules: typeof addItemsAndRules;\n}\n\ninterface Props extends WithStyles<typeof styles>, PropsFromDispatch {}\n\nfunction App(props: Props) {\n  useEffect(() => {\n    props.addItemsAndRules(items);\n  }, []);\n\n  return (\n    <div role=\"main\" className={props.classes.root}>\n      <div className={props.classes.leftScreen}>\n        <GameArea />\n      </div>\n      <div className={props.classes.rightScreen}>\n        <Scoreboard />\n      </div>\n    </div>\n  );\n}\n\nconst MapDispatchToProps = {\n  addItemsAndRules\n};\n\nexport default connect<null, PropsFromDispatch>(\n  null,\n  MapDispatchToProps\n)(React.memo(withStyles(styles)(App)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Game/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport jss from \"jss\";\nimport { ThemeProvider } from \"react-jss\";\nimport \"react-app-polyfill/ie11\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Game/store\";\n\nconst jsspreset = require(\"jss-preset-default\");\n\njss.use(jsspreset);\n\nconst store = createStore(\n  rootReducer,\n  //@ts-ignore - for react devtools\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={{}}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}